

//------------------------------------------------------------------------------
// Copyright (c) 2020-2021 EMQ Technologies Co., Ltd. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//------------------------------------------------------------------------------

syntax = "proto3";

package emqx.schema_registry.v1;

service Parser {
  rpc Parse(ParseRequest) returns (ParseResponse) {};
  rpc HealthCheck(Ping) returns (Pong) {};
}

//------------------------------------------------------------------------------
// Request & Response
//------------------------------------------------------------------------------
message Ping {}
message Pong {}

message ParseRequest {
  enum Type {
    DECODE = 0;
    ENCODE = 1;
  }
  // The type of the request, can be decode or encode
  Type type = 1;
  // The current schema name
  string schema_name = 2;
  // The parser option is of arbitrary user-defined string format.
  // For exmaple, it can be a JSON string.
  string parser_opts = 3;
  // The raw-data that to be decoded/encoded.
  bytes data = 4;
}

message ParseResponse {
  enum Code {
    SUCCESS = 0;
    BAD_DATA_FROMAT = 1;
    INTERNAL_ERROR = 2;
    UNKNOWN_ERROR = 3;
  }
  // The response code
  Code code = 1;
  // The response message
  string message = 2;
  // The parse result. It is not present in case of parse error
  bytes result = 3;
}
